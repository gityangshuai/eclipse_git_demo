<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:redis="http://www.springframework.org/schema/redis"
	xsi:schemaLocation="  
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.2.xsd    
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
         http://www.springframework.org/schema/redis 
         http://www.springframework.org/schema/redis/spring-redis-1.0.xsd">
    <!-- spring-session 配置 -->
	<bean id="redisHttpSessionConfiguration"
		class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
		<property name="maxInactiveIntervalInSeconds" value="60" />
	</bean>

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="100" />
		<property name="maxIdle" value="10" />
	</bean>
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		destroy-method="destroy">
		<property name="hostName" value="${redis_hostname}" />
		<property name="port" value="${redis_port}" />
		<property name="password" value="${redis_pwd}" />
		<property name="timeout" value="3000" />
		<property name="usePool" value="true" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>
	
	<!-- redis 消息队列配置 -->
	<bean id="jedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory"></property>
	</bean>
	<bean id="jdkSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
	<bean id="messageListener"
		class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
		<property name="delegate" ref="messageDelegateListener" />
		<property name="serializer" ref="jdkSerializer" />
	</bean>
	<bean id="testMessageListener"
		class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
		<property name="delegate" ref="testMessageDelegateListener" />
		<property name="serializer" ref="jdkSerializer" />
	</bean>

	<bean id="sendMessage" class="com.wavenet.message.SendMessage">
		<property name="redisTemplate" ref="jedisTemplate" />
	</bean>
	<redis:listener-container connection-factory="jedisConnectionFactory">
		<redis:listener ref="messageListener" method="handleMessage"
			serializer="jdkSerializer" topic="sms_queue_web_online" />
		<redis:listener ref="testMessageListener" method="handleMessage"
			serializer="jdkSerializer" topic="sms_queue_web_online" />
	</redis:listener-container> 

	<!-- <bean id="jedisQueue" class="com.sample.redis.sdr.RedisQueue" destroy-method="destroy"> 
		<property name="redisTemplate" ref="jedisTemplate"></property> <property 
		name="key" value="user:queue"></property> <property name="listener" ref="jedisQueueListener"></property> 
		</bean> -->
</beans>  
