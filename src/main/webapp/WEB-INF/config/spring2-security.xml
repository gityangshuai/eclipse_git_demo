<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	
	<global-method-security pre-post-annotations="enabled" /> 
	<beans:bean id="loggerListener" class="org.springframework.security.authentication.event.LoggerListener" />
	<http pattern="/login" security="none"/>
	<http pattern="/static/**" security="none"/>
	<http pattern="/uploadimg/**" security="none"/>
	
	<http access-denied-page="http://localhost:8081/cas/403">
		<logout invalidate-session="true" logout-success-url = "/login/out"/>
		<form-login login-page="/login" authentication-failure-url="/login" default-target-url="/main"/>
        <custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="urlSecurityFilter"/>
	    <session-management session-fixation-protection="none" invalid-session-url="/main">
			<concurrency-control/> 	
		</session-management>
	</http>

    <beans:bean id="urlSecurityFilter" class="com.wavenet.sso.filter.WavenetSecurityFilter">
        <beans:property name="authenticationManager" ref="wavenetAuthenticationManager" />
        <beans:property name="accessDecisionManager" ref="wavenetAccessDecisionManager" />
        <beans:property name="securityMetadataSource" ref="wavenetSecurityMetadataSource" />
    </beans:bean>
    
   <authentication-manager alias="wavenetAuthenticationManager">  
        <authentication-provider user-service-ref="userDetailServiceImpl">
        	<password-encoder hash="md5">
        	</password-encoder>
        </authentication-provider>  
    </authentication-manager>
    <beans:bean id="wavenetAccessDecisionManager" class="com.wavenet.sso.filter.WavenetAccessDecisionManager"/>  
    <beans:bean id="wavenetSecurityMetadataSource" class="com.wavenet.sso.filter.WavenetSecurityMetadataSource">  
    	<beans:constructor-arg name="resourcesService" ref="resourcesService">
    	</beans:constructor-arg>  
    </beans:bean>
    <beans:bean id="userDetailServiceImpl" class="com.wavenet.sso.service.UserDetailServiceImpl"/>
</beans:beans>


<!--  如用户登录通过查询本地数据库方式使用以下配置文件
<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	<global-method-security pre-post-annotations="enabled" /> 
	<beans:bean id="loggerListener" class="org.springframework.security.authentication.event.LoggerListener" />
	<http pattern="/login" security="none"/>
	<http pattern="/static/**" security="none"/>
	<http pattern="/uploadimg/**" security="none"/>
	<http pattern="/idx/show" security="none"/>
	
	<http access-denied-page="/login/403">
		<logout invalidate-session="true" logout-success-url = "/login/out"/>
		<form-login login-page="/login" authentication-failure-url="/login" default-target-url="/idx/show"/>
        <custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="urlSecurityFilter"/>
	    <session-management session-fixation-protection="none" invalid-session-url="/idx/show">
			<concurrency-control/> 	
		</session-management>
	</http>

    <beans:bean id="urlSecurityFilter" class="com.wavenet.sso.filter.WavenetSecurityFilter">
        <beans:property name="authenticationManager" ref="wavenetAuthenticationManager" />
        <beans:property name="accessDecisionManager" ref="wavenetAccessDecisionManager" />
        <beans:property name="securityMetadataSource" ref="wavenetSecurityMetadataSource" />
    </beans:bean>
    
   <authentication-manager alias="wavenetAuthenticationManager">  
        <authentication-provider user-service-ref="userDetailServiceImpl">
        	<password-encoder hash="md5">
        	</password-encoder>
        </authentication-provider>  
    </authentication-manager>
    <beans:bean id="wavenetAccessDecisionManager" class="com.wavenet.sso.filter.WavenetAccessDecisionManager"/>  
    <beans:bean id="wavenetSecurityMetadataSource" class="com.wavenet.sso.filter.WavenetSecurityMetadataSource">  
    	<beans:constructor-arg name="resourcesService" ref="resourcesService">
    	</beans:constructor-arg>  
    </beans:bean>
    <beans:bean id="userDetailServiceImpl" class="com.wavenet.sso.service.UserDetailServiceImpl"/>
</beans:beans>
-->
